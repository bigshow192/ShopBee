<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /h/w/+eJcPl4cgAAAABJRU5ErkJggg==
</value>
  </data>
</root>